<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers\base;

use app\models\MasterMitra;
use app\models\MasterKontrak;
use app\models\Kabupaten;
use backend\models\MasterMitraSearch;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use common\models\User;
use Yii;

/**
 * MitraController implements the CRUD actions for MasterMitra model.
 */
class MitraController extends Controller
{


    /**
     * @var boolean whether to enable CSRF validation for the actions in this controller.
     * CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
     */
    public $enableCsrfValidation = false;


    /**
     * Lists all MasterMitra models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new MasterMitraSearch;
        $dataProvider = $searchModel->search($_GET);

        Tabs::clearLocalStorage();

        Url::remember();
        \Yii::$app->session['__crudReturnUrl'] = null;

        return $this->render('index', [
            'dataProvider' => $dataProvider,
            'searchModel' => $searchModel,
        ]);
    }

//persent kontrak terakhir dari mitra
    public function actionPersent($idMitra)
    {
        // $model = new MasterKegiatan;
        // $hasil = $model->getPercent($idKontrak);
        $jumlahKegiatan = 0;
        $jumlahNominal = 0;
        $query = new \yii\db\Query();
        $queryKontrak = MasterKontrak::find()
            ->andWhere('id_mitra = ' . $idMitra)
            ->andWhere('status=1')
            ->andWhere('flag=1')
            ->all();
        if ($queryKontrak != null) {
            foreach ($queryKontrak as $key => $dataKontrak) {
                $nilaiKontrak = $dataKontrak['nilai_kontrak'];
                $idKontrak = $dataKontrak['id'];
            }

            $kontrak = MasterKontrak::find()
                ->andWhere('id = ' . $idKontrak)
                ->andWhere('status=1')
                ->andWhere('flag=1')
                ->one();
            $kegiatan = $kontrak->getMasterKegiatans()->andWhere('status=1')->andWhere('flag=1')->all();
            foreach ($kegiatan as $key => $dataKegiatan) {
                $jumlahKegiatan++;
                $jumlahNominal += $dataKegiatan['nominal'];
            }
            $persent = ($jumlahNominal / $nilaiKontrak) * 100;

            return round($persent);
        } else {
            return 0;
        }

    }


    /**
     * Displays a single MasterMitra model.
     * @param integer $id
     *
     * @return mixed
     */
    public function actionView($id)
    {
        \Yii::$app->session['__crudReturnUrl'] = Url::previous();
        Url::remember();
        Tabs::rememberActiveState();

        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Finds the MasterMitra model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return MasterMitra the loaded model
     * @throws HttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = MasterMitra::findOne($id)) !== null) {
            return $model;
        } else {
            throw new HttpException(404, 'The requested page does not exist.');
        }
    }

    /**
     * Creates a new MasterMitra model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new MasterMitra;

        try {
            if ($model->load($_POST)) {
                //create username & password
                $alphabet = "abcdefghijklmnopqrstuwxyzABCDEFGHIJKLMNOPQRSTUWXYZ0123456789";
                $pass = array();
                //remember to declare $pass as an array
                $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
                for ($i = 0; $i < 8; $i++) {
                    $n = rand(0, $alphaLength);
                    $u = rand(0, $alphaLength);
                    $pass[] = $alphabet[$n];


                }
                //save user
                $passwordnya = implode($pass);
                $usernya = $model->email;
                $user = new User();
                $user->username = $model->email;
                $user->setPassword(implode($pass));
                $user->role = 6;
                $user->fakultas = 0;
                $user->jurusan = 0;
                $user->email = $model->email;
                $user->generateAuthKey();
                if ($user->save()) {
                    //get id
                    $query = new \yii\db\Query();
                    $showId = $query->select(['id'])
                        ->from('user')
                        ->orderBy(['id' => SORT_DESC])
                        ->limit(1)
                        ->all();

                    //var_dump($showId);
                    foreach ($showId as $key => $value) {
                        $model->id_user = $value["id"];
                    }

                    $txt = "silahkan login ke sistem" . "\n" . "username : " . $usernya . "\n" . "password : " . $passwordnya;
                    $mess = Yii::$app->mailer->compose();
                    $mess->setFrom('faruqfadhil7@gmail.com')
                        ->setTo($model->email)
                        ->setSubject('SISTEM INFORMASI ITS')
                        ->setTextBody($txt)
                        ->send();


                    if ($model->save()) {
                        return $this->redirect(['view', 'id' => $model->id]);
                    } else {
                    }
                } elseif (!\Yii::$app->request->isPost) {
                    $model->load($_GET);
                }
            }
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            $model->addError('_exception', $msg);
        }
        return $this->render('create', ['model' => $model]);
    }

    public function actionLists($id)
    {
        $countPosts = Kabupaten::find()
            ->where(['id_prov' => $id])->count();

        $posts = Kabupaten::find()
            ->where(['id_prov' => $id])->all();

        if ($countPosts > 0) {
            foreach ($posts as $post) {
                echo "<option value='" . $post->id_kab . "'>" . $post->nama . "</option>";
            }
        } else {
            echo "<option>-</option>";
        }

    }

    /**
     * Updates an existing MasterMitra model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load($_POST) && $model->save()) {
            return $this->redirect(Url::previous());
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing MasterMitra model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        try {
            $this->findModel($id)->delete();
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            \Yii::$app->getSession()->addFlash('error', $msg);
            return $this->redirect(Url::previous());
        }

// TODO: improve detection
        $isPivot = strstr('$id', ',');
        if ($isPivot == true) {
            return $this->redirect(Url::previous());
        } elseif (isset(\Yii::$app->session['__crudReturnUrl']) && \Yii::$app->session['__crudReturnUrl'] != '/') {
            Url::remember(null);
            $url = \Yii::$app->session['__crudReturnUrl'];
            \Yii::$app->session['__crudReturnUrl'] = null;

            return $this->redirect($url);
        } else {
            return $this->redirect(['index']);
        }
    }
}
