<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers\base;

use app\models\Event;
use app\models\EventSearch;
use app\models\Mahasiswa;
use app\models\RoleMenu;
use frontend\models\MahasiswaSearch;
use Yii;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use yii\web\UploadedFile;

/**
 * EventController implements the CRUD actions for Event model.
 */
class EventController extends Controller
{
    /**
     * @var boolean whether to enable CSRF validation for the actions in this controller.
     * CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
     */
    public $enableCsrfValidation = false;


    /**
     * Lists all Event models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new EventSearch;
        $dataProvider = $searchModel->search($_GET);

        Tabs::clearLocalStorage();

        Url::remember();
        \Yii::$app->session['__crudReturnUrl'] = null;

        return $this->render('index', [
            'dataProvider' => $dataProvider,
            'searchModel' => $searchModel,
        ]);
    }

    /**
     * Displays a single Event model.
     * @param integer $id
     *
     * @return mixed
     */
    public function actionView($id)
    {
        \Yii::$app->session['__crudReturnUrl'] = Url::previous();
        Url::remember();
        Tabs::rememberActiveState();

        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Event model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Event;
        $roleM = new RoleMenu();
        $searchModel = new MahasiswaSearch();
        $dataProvider = $searchModel->search($_GET);
        $dataProvider->query->leftJoin('mhs_skill', 'mhs_skill.id_mahasiswa = mahasiswa.id');
        $dataProvider->query->leftJoin('mhs_minat', 'mhs_minat.id_mahasiswa = mahasiswa.id');
        $dataProvider->query->andFilterWhere(['not in', 'mahasiswa.id', Yii::$app->user->identity->getId()]);
        try {
            if (isset($_POST['cari'])) {
                $model->load($_POST);
//                print_r($_POST);
//                die();
                if (isset($_POST['fakultas']))
                    $dataProvider->query->andFilterWhere(["fakultas" => $_POST['fakultas']]);
                if (isset($_POST['jurusan']))
                    $dataProvider->query->andFilterWhere(["jurusan" => $_POST['jurusan']]);
                if (isset($_POST['thn_masuk']))
                    $dataProvider->query->andFilterWhere(["tahun_masuk" => $_POST['thn_masuk']]);
                if (isset($_POST['selected_minat']))
                    $dataProvider->query->andFilterWhere(["in", "mhs_skill.skill_id", $_POST['selected_minat']]);
                if (isset($_POST['selected_minat2']))
                    $dataProvider->query->andFilterWhere(["in", "mhs_minat.categori_id", $_POST['selected_minat2']]);
            } else if (isset($_POST['save'])) {
                $model->load($_POST);
                $foto = UploadedFile::getInstance($model, 'gambar');
                $model->tanggal = date("d-M-Y");
                if ($foto != NULL) {
                    $model->gambar = $foto->name;
                    $arr = explode(".", $foto->name);
                    $extension = end($arr);
                    $model->gambar = \Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = \Yii::getAlias("@frontend/web/uploads/event/") . $model->gambar;
                    $foto->saveAs($path);
                }
                if ($foto == NULL) {
                    $model->gambar = "default.png";
                }

                if ($model->save()) {
                    if (isset($_POST['selection']) == NULL) {
                        $this->findModel($model->id)->delete();
                        return $this->redirect(Yii::$app->request->baseUrl . '/event/create');
                    } else {
                        $c = implode(",", $_POST['selection']);
                    }
                    $pk = explode(",", $c);
                    foreach ($pk as $d => $value) {
                        $mh = Mahasiswa::find()->where(['id' => $value])->one();
                        $ms = $mh->email;
                        $tex = 'Event baru telah tersedia. Silahkan cek <a href="http://localhost/alumniits/endowment"> Disini</a> ';
                        Yii::$app->mailer->compose()
                            ->setTo($ms)
                            ->setFrom('ikaits.its@ac.id')
                            ->setSubject('Join to Event '.$model->judul)
                            ->setHtmlBody($tex)
                            ->send();
                    }

                    \Yii::$app->session->addFlash("success", "Data Tersimpan.");
                    return $this->redirect(['view', 'id' => $model->id]);
                } elseif (!\Yii::$app->request->isPost) {
                    $model->load($_GET);
                }
                $model->load($_GET);
            }
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            $model->addError('_exception', $msg);
        }
        return $this->render('create', [
            'model' => $model,
            'roleM' => $roleM,
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider
        ]);
    }

    public function actionListm($query)
    {
        $ganti = array("'");
        $ganti_baru = array("");
        $baru = str_replace($ganti, $ganti_baru ,$query);
        $queryS = "SELECT * FROM master_skill where nama LIKE '" . $baru . "%' ";
        $models = \frontend\models\MasterSkill::findBySql($queryS)->all();
        $items = [];
        foreach ($models as $model) {
            $items[] = [
                'id' => $model->id,
                'name' => $model->nama];
        }
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        return $items;
    }

    public function actionListmnt($query)
    {
        $ganti = array("'");
        $ganti_baru = array("");
        $baru = str_replace($ganti, $ganti_baru ,$query);
        $queryS = "SELECT * FROM master_categori where nama LIKE '" . $baru . "%' ";
        $models = \frontend\models\MasterCategori::findBySql($queryS)->all();
        $items = [];
        foreach ($models as $model) {
            $items[] = [
                'id' => $model->id,
                'name' => $model->nama];
        }
// We know we can use ContentNegotiator filter
// this way is easier to show you here :)
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        return $items;
    }

    /**
     * Updates an existing Event model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $oldFoto = $model->gambar;
        if ($model->load($_POST)) {
            $foto = UploadedFile::getInstance($model, 'gambar');
            if ($foto != NULL) {
                $model->gambar = $foto->name;
                $arr = explode(".", $foto->name);
                $extension = end($arr);
                $model->gambar = \Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = \Yii::getAlias("@frontend/web/uploads/event/") . $model->gambar;
                $foto->saveAs($path);
            } else {
                $model->gambar = $oldFoto;
            }
            if ($model->save()) {
                \Yii::$app->session->addFlash("success", "Data Event successfully updated.");
            } else {
                \Yii::$app->session->addFlash("danger", "Data Event cannot updated.");
            }
            return $this->redirect(['view', 'id' => $model->id]);
        }
        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing Event model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        try {
            $this->findModel($id)->delete();
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            \Yii::$app->getSession()->addFlash('error', $msg);
            return $this->redirect(Url::previous());
        }

// TODO: improve detection
        $isPivot = strstr('$id', ',');
        if ($isPivot == true) {
            return $this->redirect(Url::previous());
        } elseif (isset(\Yii::$app->session['__crudReturnUrl']) && \Yii::$app->session['__crudReturnUrl'] != '/') {
            Url::remember(null);
            $url = \Yii::$app->session['__crudReturnUrl'];
            \Yii::$app->session['__crudReturnUrl'] = null;

            return $this->redirect($url);
        } else {
            return $this->redirect(['index']);
        }
    }

    /**
     * Finds the Event model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Event the loaded model
     * @throws HttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Event::findOne($id)) !== null) {
            return $model;
        } else {
            throw new HttpException(404, 'The requested page does not exist.');
        }
    }

}
